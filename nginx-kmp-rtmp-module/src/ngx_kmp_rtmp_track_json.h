/* auto-generated by generate_json_header.py */

#ifndef ngx_copy_fix
#define ngx_copy_fix(dst, src)   ngx_copy(dst, (src), sizeof(src) - 1)
#endif

#ifndef ngx_copy_str
#define ngx_copy_str(dst, src)   ngx_copy(dst, (src).data, (src).len)
#endif

/* ngx_kmp_rtmp_track_json writer */

size_t
ngx_kmp_rtmp_track_json_get_size(ngx_kmp_rtmp_track_t *obj)
{
    size_t  result;

    result =
        sizeof("{\"pending_frames\":") - 1 + NGX_INT_T_LEN +
        sizeof(",\"mem_used\":") - 1 + NGX_SIZE_T_LEN +
        sizeof(",\"input\":") - 1 + ngx_kmp_in_json_get_size(obj->input) +
        sizeof("}") - 1;

    return result;
}


u_char *
ngx_kmp_rtmp_track_json_write(u_char *p, ngx_kmp_rtmp_track_t *obj)
{
    p = ngx_copy_fix(p, "{\"pending_frames\":");
    p = ngx_sprintf(p, "%ui", (ngx_uint_t) obj->frames.count);
    p = ngx_copy_fix(p, ",\"mem_used\":");
    p = ngx_sprintf(p, "%uz", (size_t)
        ngx_buf_queue_mem_used(&obj->buf_queue));
    p = ngx_copy_fix(p, ",\"input\":");
    p = ngx_kmp_in_json_write(p, obj->input);
    *p++ = '}';

    return p;
}
