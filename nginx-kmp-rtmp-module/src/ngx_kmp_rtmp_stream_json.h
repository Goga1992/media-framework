/* auto-generated by generate_json_header.py */

#ifndef ngx_copy_fix
#define ngx_copy_fix(dst, src)   ngx_copy(dst, (src), sizeof(src) - 1)
#endif

#ifndef ngx_copy_str
#define ngx_copy_str(dst, src)   ngx_copy(dst, (src).data, (src).len)
#endif

/* ngx_kmp_rtmp_stream_json writer */

size_t
ngx_kmp_rtmp_stream_json_get_size(ngx_kmp_rtmp_stream_t *obj)
{
    size_t  result;

    result =
        sizeof("{\"id\":") - 1 + NGX_INT32_LEN +
        sizeof(",\"uptime\":") - 1 + NGX_INT_T_LEN +
        sizeof(",\"tracks\":") - 1 +
            ngx_kmp_rtmp_stream_tracks_json_get_size(obj) +
        sizeof("}") - 1;

    return result;
}


u_char *
ngx_kmp_rtmp_stream_json_write(u_char *p, ngx_kmp_rtmp_stream_t *obj)
{
    p = ngx_copy_fix(p, "{\"id\":");
    p = ngx_sprintf(p, "%uD", (uint32_t) obj->ctx.msid);
    p = ngx_copy_fix(p, ",\"uptime\":");
    p = ngx_sprintf(p, "%i", (ngx_int_t) (ngx_current_msec - obj->created) /
        1000);
    p = ngx_copy_fix(p, ",\"tracks\":");
    p = ngx_kmp_rtmp_stream_tracks_json_write(p, obj);
    *p++ = '}';

    return p;
}
