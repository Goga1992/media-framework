
# auto/configure --with-stream --with-debug --with-threads --with-cc-opt="-O0" --with-http_dav_module --add-module=/opt/kaltura/live/nginx-common --add-module=/opt/kaltura/live/nginx-live-module --add-module=/opt/kaltura/live/nginx-pckg-module
# for valgrind, run apply_no_pool.py on nginx source + add -DNGX_BLOCK_POOL_SKIP -DNGX_LBA_SKIP to --with-cc-opt

worker_rlimit_core  500M;
working_directory   /tmp/;

worker_processes  1;
debug_points stop;

error_log  /var/log/nginx/error.log debug;

events {
    worker_connections  1024;
}

live {

    store_s3_block dummy_bucket {
        url http://127.0.0.1:8001;
        access_key AKIAIOSFODNN7EXAMPLE;
        secret_key wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY;
        service s3;
        region us-east-1;
    }

    persist_media_path /store/channel/$channel_id/bucket/$persist_bucket_id;
    persist_setup_path /store/channel/$channel_id/setup;
    persist_index_path /store/channel/$channel_id/index;
    persist_delta_path /store/channel/$channel_id/delta;
    persist_filler_path /store/channel/$channel_id/filler;
    persist_max_delta_segments 10;
    persist_opaque $hostname:$live_version;

    preset main {
        store_s3 dummy_bucket;
        segment_info_bitrate on;
        persist_setup_timeout 1s;
    }

    preset volatile {
        segment_info_bitrate on;
    }
}

stream {

    server {
        listen 6543;
        live_kmp;
    }
}

http {

    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" '
                    '$live_ksmp_err_code "$live_ksmp_err_msg" '
                    '"$live_ksmp_source" $pckg_err_code "$pckg_err_msg" '
                    '$pckg_upstream_status';

    server {

        listen       8001;
        server_name  localhost;

        access_log  /var/log/nginx/access.log main;

        # s3 stub

        location /store/ {
            allow 127.0.0.1/32;
            deny all;

            root /tmp/;
            dav_methods PUT;
            create_full_put_path on;
            client_max_body_size 100m;
        }

        # live

        location /control/ {
            allow 127.0.0.1/32;
            deny all;

            live_api write=on upsert=on;
        }

        location /ksmp/ {
            live_ksmp;
        }

        # pckg

        add_header Access-Control-Allow-Headers 'Origin,Range,Accept-Encoding,Referer,Cache-Control';
        add_header Access-Control-Expose-Headers 'Server,Content-Length,Content-Range,Date';
        add_header Access-Control-Allow-Methods 'GET,HEAD,OPTIONS';
        add_header Access-Control-Allow-Origin '*';

        pckg_uri /ksmp_proxy/;
        pckg_channel_id $channel_id;
        pckg_timeline_id $timeline_id;
        pckg_segment_metadata meta/$pckg_channel_id/$pckg_variant_ids/$pckg_timeline_id/$pckg_segment_dts/data;

        location ~ /hls-ts/(?P<channel_id>[^/]+)/tl/(?P<timeline_id>[^/]+) {
            pckg;
            pckg_m3u8_container mpegts;
        }

        location ~ /hls-fmp4/(?P<channel_id>[^/]+)/tl/(?P<timeline_id>[^/]+) {
            pckg;
            pckg_m3u8_container fmp4;
        }

        location ~ /hls-um-ts/(?P<channel_id>[^/]+)/tl/(?P<timeline_id>[^/]+) {
            pckg;
            pckg_m3u8_container mpegts;
            pckg_m3u8_mux_segments off;
        }

        location ~ /hls-um-fmp4/(?P<channel_id>[^/]+)/tl/(?P<timeline_id>[^/]+) {
            pckg;
            pckg_m3u8_container fmp4;
            pckg_m3u8_mux_segments off;
        }

        location ~ /hls-aa/(?P<channel_id>[^/]+)/tl/(?P<timeline_id>[^/]+) {
            pckg;
            pckg_active_policy any;
            pckg_media_type_selector actual;
            pckg_m3u8_container mpegts;
        }

        location /ksmp_proxy/ {
            internal;
            proxy_pass http://127.0.0.1:8001/ksmp/;
            subrequest_output_buffer_size 5m;
        }

        # coverage report

        location /cov/ {
            root /usr/local/nginx/html/;
        }
    }
}
