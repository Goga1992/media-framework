
# auto/configure --with-stream --with-debug --with-threads --with-cc-opt="-O0" --with-http_dav_module --add-module=/opt/kaltura/live/nginx-common --add-module=/opt/kaltura/live/nginx-live-module
# for valgrind, run apply_no_pool.py on nginx source + add -DNGX_BLOCK_POOL_SKIP to --with-cc-opt

worker_rlimit_core  500M;
working_directory   /tmp/;

worker_processes  1;
debug_points stop;

error_log  /var/log/nginx/error.log debug;

events {
    worker_connections  1024;
}

live {

    dvr_s3_block dummy_bucket {
        url http://127.0.0.1:8001;
        access_key AKIAIOSFODNN7EXAMPLE;
        secret_key wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY;
        service s3;
        region us-east-1;
    }

	dvr_path /dvr/channel/$channel_id/bucket/$dvr_bucket_id;

    preset main {
        dvr_s3 dummy_bucket;
    }
}

stream {

    server {
        listen 6543;
        live_kmp;
    }
}

http {

    default_type application/octet-stream;

    server {

        listen       8001;
        server_name  localhost;

        access_log  /var/log/nginx/access.log combined;

        location /dvr/ {
            root /tmp/;
            dav_methods PUT;
            create_full_put_path on;
        }

        location /control/ {
            live_api write=on upsert=on;
        }

        live_segment_metadata meta/$live_channel_id/$live_variant_id/$live_timeline_id/$live_segment_dts/data;

		add_header Access-Control-Allow-Headers 'Origin,Range,Accept-Encoding,Referer,Cache-Control';
		add_header Access-Control-Expose-Headers 'Server,Content-Length,Content-Range,Date';
		add_header Access-Control-Allow-Methods 'GET,HEAD,OPTIONS';
		add_header Access-Control-Allow-Origin '*';

		live_channel_id $channel_id;
		live_timeline_id $timeline_id;

        location ~ /hls-ts/(?P<channel_id>[^/]+)/tl/(?P<timeline_id>[^/]+) {
            live_hls;
			live_hls_container_format mpegts;
        }

        location ~ /hls-fmp4/(?P<channel_id>[^/]+)/tl/(?P<timeline_id>[^/]+) {
            live_hls;
			live_hls_container_format fmp4;
        }
    }
}
