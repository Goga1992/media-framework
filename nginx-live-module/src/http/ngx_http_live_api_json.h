/* auto-generated by generate_json_builder.py */

#ifndef ngx_copy_fix
#define ngx_copy_fix(dst, src)   ngx_copy(dst, (src), sizeof(src) - 1)
#endif


static size_t
ngx_http_live_api_json_get_size(void *obj)
{
    size_t  result =
        sizeof("{\"version\":\"") - 1 + ngx_http_live_version.len +
            ngx_escape_json(NULL, ngx_http_live_version.data,
            ngx_http_live_version.len) +
        sizeof("\",\"nginx_version\":\"") - 1 +
            ngx_http_live_nginx_version.len + ngx_escape_json(NULL,
            ngx_http_live_nginx_version.data, ngx_http_live_nginx_version.len)
            +
        sizeof("\",\"compiler\":\"") - 1 + ngx_http_live_compiler.len +
            ngx_escape_json(NULL, ngx_http_live_compiler.data,
            ngx_http_live_compiler.len) +
        sizeof("\",\"built\":\"") - 1 + ngx_http_live_built.len +
            ngx_escape_json(NULL, ngx_http_live_built.data,
            ngx_http_live_built.len) +
        sizeof("\",\"pid\":") - 1 + NGX_INT_T_LEN +
        sizeof(",\"time\":") - 1 + NGX_TIME_T_LEN +
        sizeof(",\"uptime\":") - 1 + NGX_TIME_T_LEN +
        sizeof(",") - 1 + ngx_live_core_json_get_size(NULL, NULL,
            NGX_LIVE_JSON_CTX_GLOBAL) +
        sizeof(",\"channels\":") - 1 + ngx_live_channels_json_get_size(NULL) +
        sizeof("}") - 1;

    return result;
}

static u_char *
ngx_http_live_api_json_write(u_char *p, void *obj)
{
    u_char  *next;
    p = ngx_copy_fix(p, "{\"version\":\"");
    p = (u_char *) ngx_escape_json(p, ngx_http_live_version.data,
        ngx_http_live_version.len);
    p = ngx_copy_fix(p, "\",\"nginx_version\":\"");
    p = (u_char *) ngx_escape_json(p, ngx_http_live_nginx_version.data,
        ngx_http_live_nginx_version.len);
    p = ngx_copy_fix(p, "\",\"compiler\":\"");
    p = (u_char *) ngx_escape_json(p, ngx_http_live_compiler.data,
        ngx_http_live_compiler.len);
    p = ngx_copy_fix(p, "\",\"built\":\"");
    p = (u_char *) ngx_escape_json(p, ngx_http_live_built.data,
        ngx_http_live_built.len);
    p = ngx_copy_fix(p, "\",\"pid\":");
    p = ngx_sprintf(p, "%ui", (ngx_uint_t) ngx_getpid());
    p = ngx_copy_fix(p, ",\"time\":");
    p = ngx_sprintf(p, "%T", (time_t) ngx_cached_time->sec);
    p = ngx_copy_fix(p, ",\"uptime\":");
    p = ngx_sprintf(p, "%T", (time_t) (ngx_cached_time->sec -
        ngx_http_live_start_time));
    *p++ = ',';
    next = ngx_live_core_json_write(p, NULL, NULL, NGX_LIVE_JSON_CTX_GLOBAL);
    p = next == p ? p - 1 : next;
    p = ngx_copy_fix(p, ",\"channels\":");
    p = ngx_live_channels_json_write(p, NULL);
    *p++ = '}';

    return p;
}
