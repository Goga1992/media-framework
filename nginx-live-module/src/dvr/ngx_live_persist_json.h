/* auto-generated by generate_json_builder.py */

#ifndef ngx_copy_fix
#define ngx_copy_fix(dst, src)   ngx_copy(dst, (src), sizeof(src) - 1)
#endif


static size_t
ngx_live_persist_setup_json_get_size(ngx_live_persist_channel_ctx_t *obj)
{
    size_t  result =
        sizeof("{\"version\":") - 1 + NGX_INT32_LEN +
        sizeof(",\"pending\":") - 1 + NGX_INT32_LEN +
        sizeof(",\"error\":") - 1 + NGX_INT32_LEN +
        sizeof(",\"success\":") - 1 + NGX_INT32_LEN +
        sizeof(",\"success_msec\":") - 1 + NGX_INT64_LEN +
        sizeof(",\"success_size\":") - 1 + NGX_INT64_LEN +
        sizeof(",\"success_version\":") - 1 + NGX_INT32_LEN +
        sizeof("}") - 1;

    return result;
}

static u_char *
ngx_live_persist_setup_json_write(u_char *p, ngx_live_persist_channel_ctx_t
    *obj)
{
    ngx_live_persist_file_stats_t *stats =
        &obj->stats[NGX_LIVE_PERSIST_FILE_SETUP];
    p = ngx_copy_fix(p, "{\"version\":");
    p = ngx_sprintf(p, "%uD", (uint32_t) obj->setup.version);
    p = ngx_copy_fix(p, ",\"pending\":");
    p = ngx_sprintf(p, "%uD", (uint32_t) (stats->started - stats->error -
        stats->success));
    p = ngx_copy_fix(p, ",\"error\":");
    p = ngx_sprintf(p, "%uD", (uint32_t) stats->error);
    p = ngx_copy_fix(p, ",\"success\":");
    p = ngx_sprintf(p, "%uD", (uint32_t) stats->success);
    p = ngx_copy_fix(p, ",\"success_msec\":");
    p = ngx_sprintf(p, "%uL", (uint64_t) stats->success_msec);
    p = ngx_copy_fix(p, ",\"success_size\":");
    p = ngx_sprintf(p, "%uL", (uint64_t) stats->success_size);
    p = ngx_copy_fix(p, ",\"success_version\":");
    p = ngx_sprintf(p, "%uD", (uint32_t) obj->setup.success_version);
    *p++ = '}';

    return p;
}

static size_t
ngx_live_persist_index_json_get_size(ngx_live_persist_channel_ctx_t *obj)
{
    size_t  result =
        sizeof("{\"pending\":") - 1 + NGX_INT32_LEN +
        sizeof(",\"error\":") - 1 + NGX_INT32_LEN +
        sizeof(",\"success\":") - 1 + NGX_INT32_LEN +
        sizeof(",\"success_msec\":") - 1 + NGX_INT64_LEN +
        sizeof(",\"success_size\":") - 1 + NGX_INT64_LEN +
        sizeof(",\"success_index\":") - 1 + NGX_INT32_LEN +
        sizeof("}") - 1;

    return result;
}

static u_char *
ngx_live_persist_index_json_write(u_char *p, ngx_live_persist_channel_ctx_t
    *obj)
{
    ngx_live_persist_file_stats_t *stats =
        &obj->stats[NGX_LIVE_PERSIST_FILE_INDEX];
    p = ngx_copy_fix(p, "{\"pending\":");
    p = ngx_sprintf(p, "%uD", (uint32_t) (stats->started - stats->error -
        stats->success));
    p = ngx_copy_fix(p, ",\"error\":");
    p = ngx_sprintf(p, "%uD", (uint32_t) stats->error);
    p = ngx_copy_fix(p, ",\"success\":");
    p = ngx_sprintf(p, "%uD", (uint32_t) stats->success);
    p = ngx_copy_fix(p, ",\"success_msec\":");
    p = ngx_sprintf(p, "%uL", (uint64_t) stats->success_msec);
    p = ngx_copy_fix(p, ",\"success_size\":");
    p = ngx_sprintf(p, "%uL", (uint64_t) stats->success_size);
    p = ngx_copy_fix(p, ",\"success_index\":");
    p = ngx_sprintf(p, "%uD", (uint32_t) obj->index.success_index);
    *p++ = '}';

    return p;
}

static size_t
ngx_live_persist_delta_json_get_size(ngx_live_persist_channel_ctx_t *obj)
{
    size_t  result =
        sizeof("{\"pending\":") - 1 + NGX_INT32_LEN +
        sizeof(",\"error\":") - 1 + NGX_INT32_LEN +
        sizeof(",\"success\":") - 1 + NGX_INT32_LEN +
        sizeof(",\"success_msec\":") - 1 + NGX_INT64_LEN +
        sizeof(",\"success_size\":") - 1 + NGX_INT64_LEN +
        sizeof(",\"success_index\":") - 1 + NGX_INT32_LEN +
        sizeof("}") - 1;

    return result;
}

static u_char *
ngx_live_persist_delta_json_write(u_char *p, ngx_live_persist_channel_ctx_t
    *obj)
{
    ngx_live_persist_file_stats_t *stats =
        &obj->stats[NGX_LIVE_PERSIST_FILE_DELTA];
    p = ngx_copy_fix(p, "{\"pending\":");
    p = ngx_sprintf(p, "%uD", (uint32_t) (stats->started - stats->error -
        stats->success));
    p = ngx_copy_fix(p, ",\"error\":");
    p = ngx_sprintf(p, "%uD", (uint32_t) stats->error);
    p = ngx_copy_fix(p, ",\"success\":");
    p = ngx_sprintf(p, "%uD", (uint32_t) stats->success);
    p = ngx_copy_fix(p, ",\"success_msec\":");
    p = ngx_sprintf(p, "%uL", (uint64_t) stats->success_msec);
    p = ngx_copy_fix(p, ",\"success_size\":");
    p = ngx_sprintf(p, "%uL", (uint64_t) stats->success_size);
    p = ngx_copy_fix(p, ",\"success_index\":");
    p = ngx_sprintf(p, "%uD", (uint32_t) obj->index.success_delta);
    *p++ = '}';

    return p;
}

static size_t
ngx_live_persist_channel_json_get_size(void *obj)
{
    ngx_live_persist_channel_ctx_t *cctx =
        ngx_live_get_module_ctx((ngx_live_channel_t *) obj,
        ngx_live_persist_module);
    size_t  result =
        sizeof("\"persist\":{\"setup\":") - 1 +
            ngx_live_persist_setup_json_get_size(cctx) +
        sizeof(",\"index\":") - 1 + ngx_live_persist_index_json_get_size(cctx)
            +
        sizeof(",\"delta\":") - 1 + ngx_live_persist_delta_json_get_size(cctx)
            +
        sizeof("}") - 1;

    return result;
}

static u_char *
ngx_live_persist_channel_json_write(u_char *p, void *obj)
{
    ngx_live_persist_channel_ctx_t *cctx =
        ngx_live_get_module_ctx((ngx_live_channel_t *) obj,
        ngx_live_persist_module);
    p = ngx_copy_fix(p, "\"persist\":{\"setup\":");
    p = ngx_live_persist_setup_json_write(p, cctx);
    p = ngx_copy_fix(p, ",\"index\":");
    p = ngx_live_persist_index_json_write(p, cctx);
    p = ngx_copy_fix(p, ",\"delta\":");
    p = ngx_live_persist_delta_json_write(p, cctx);
    *p++ = '}';

    return p;
}
